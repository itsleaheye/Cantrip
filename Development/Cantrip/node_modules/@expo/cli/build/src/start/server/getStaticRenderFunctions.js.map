{"version":3,"sources":["../../../../src/start/server/getStaticRenderFunctions.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport fs from 'fs';\nimport fetch from 'node-fetch';\nimport path from 'path';\nimport requireString from 'require-from-string';\nimport resolveFrom from 'resolve-from';\n\nimport { logMetroError, logMetroErrorAsync } from './metro/metroErrorInterface';\nimport { getMetroServerRoot } from './middleware/ManifestMiddleware';\nimport { createBundleUrlPath, ExpoMetroOptions } from './middleware/metroOptions';\nimport { augmentLogs } from './serverLogLikeMetro';\nimport { stripAnsi } from '../../utils/ansi';\nimport { delayAsync } from '../../utils/delay';\nimport { SilentError } from '../../utils/errors';\nimport { memoize } from '../../utils/fn';\nimport { profile } from '../../utils/profile';\n\n/** The list of input keys will become optional, everything else will remain the same. */\nexport type PickPartial<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\n\nclass MetroNodeError extends Error {\n  constructor(\n    message: string,\n    public rawObject: any\n  ) {\n    super(message);\n  }\n}\n\nconst debug = require('debug')('expo:start:server:node-renderer') as typeof console.log;\n\nconst cachedSourceMaps: Map<string, { url: string; map: string }> = new Map();\n\n// Support unhandled rejections\n// Detect if running in Bun\n\n// @ts-expect-error: This is a global variable that is set by Bun.\nif (!process.isBun) {\n  require('source-map-support').install({\n    retrieveSourceMap(source: string) {\n      if (cachedSourceMaps.has(source)) {\n        return cachedSourceMaps.get(source);\n      }\n      return null;\n    },\n  });\n}\n\nfunction wrapBundle(str: string) {\n  // Skip the metro runtime so debugging is a bit easier.\n  // Replace the __r() call with an export statement.\n  // Use gm to apply to the last require line. This is needed when the bundle has side-effects.\n  return str.replace(/^(__r\\(.*\\);)$/gm, 'module.exports = $1');\n}\n\n// TODO(EvanBacon): Group all the code together and version.\nconst getRenderModuleId = (\n  projectRoot: string,\n  entry: string = 'expo-router/node/render.js'\n): string => {\n  const moduleId = resolveFrom.silent(projectRoot, entry);\n  if (!moduleId) {\n    throw new Error(\n      `A version of expo-router with Node.js support is not installed in the project.`\n    );\n  }\n\n  return moduleId;\n};\n\nconst moveStaticRenderFunction = memoize(async (projectRoot: string, requiredModuleId: string) => {\n  // Copy the file into the project to ensure it works in monorepos.\n  // This means the file cannot have any relative imports.\n  const tempDir = path.join(projectRoot, '.expo/static');\n  await fs.promises.mkdir(tempDir, { recursive: true });\n  const moduleId = path.join(tempDir, 'render.js');\n  await fs.promises.writeFile(moduleId, await fs.promises.readFile(requiredModuleId, 'utf8'));\n  // Sleep to give watchman time to register the file.\n  await delayAsync(50);\n  return moduleId;\n});\n\n/** @returns the js file contents required to generate the static generation function. */\nasync function getStaticRenderFunctionsContentAsync(\n  projectRoot: string,\n  devServerUrl: string,\n  props: PickPartial<ExpoMetroOptions, 'mainModuleName' | 'bytecode'>,\n  entry?: string\n): Promise<{ src: string; filename: string }> {\n  const root = getMetroServerRoot(projectRoot);\n  const requiredModuleId = getRenderModuleId(root, entry);\n  let moduleId = requiredModuleId;\n\n  // Cannot be accessed using Metro's server API, we need to move the file\n  // into the project root and try again.\n  if (path.relative(root, moduleId).startsWith('..')) {\n    moduleId = await moveStaticRenderFunction(projectRoot, requiredModuleId);\n  }\n\n  return requireFileContentsWithMetro(root, devServerUrl, moduleId, props);\n}\n\nasync function ensureFileInRootDirectory(projectRoot: string, otherFile: string) {\n  // Cannot be accessed using Metro's server API, we need to move the file\n  // into the project root and try again.\n  if (!path.relative(projectRoot, otherFile).startsWith('..' + path.sep)) {\n    return otherFile;\n  }\n\n  // Copy the file into the project to ensure it works in monorepos.\n  // This means the file cannot have any relative imports.\n  const tempDir = path.join(projectRoot, '.expo/static-tmp');\n  await fs.promises.mkdir(tempDir, { recursive: true });\n  const moduleId = path.join(tempDir, path.basename(otherFile));\n  await fs.promises.writeFile(moduleId, await fs.promises.readFile(otherFile, 'utf8'));\n  // Sleep to give watchman time to register the file.\n  await delayAsync(50);\n  return moduleId;\n}\n\nexport async function createMetroEndpointAsync(\n  projectRoot: string,\n  devServerUrl: string,\n  absoluteFilePath: string,\n  props: PickPartial<ExpoMetroOptions, 'mainModuleName' | 'bytecode'>\n): Promise<string> {\n  const root = getMetroServerRoot(projectRoot);\n  const safeOtherFile = await ensureFileInRootDirectory(projectRoot, absoluteFilePath);\n  const serverPath = path.relative(root, safeOtherFile).replace(/\\.[jt]sx?$/, '');\n\n  const urlFragment = createBundleUrlPath({\n    mainModuleName: serverPath,\n    lazy: false,\n    asyncRoutes: false,\n    inlineSourceMap: false,\n    engine: 'hermes',\n    minify: false,\n    bytecode: false,\n    ...props,\n  });\n\n  let url: string;\n  if (devServerUrl) {\n    url = new URL(urlFragment.replace(/^\\//, ''), devServerUrl).toString();\n  } else {\n    url = '/' + urlFragment.replace(/^\\/+/, '');\n  }\n  return url;\n}\n\nexport async function requireFileContentsWithMetro(\n  projectRoot: string,\n  devServerUrl: string,\n  absoluteFilePath: string,\n  props: PickPartial<ExpoMetroOptions, 'mainModuleName' | 'bytecode'>\n): Promise<{ src: string; filename: string }> {\n  const url = await createMetroEndpointAsync(projectRoot, devServerUrl, absoluteFilePath, props);\n  return await metroFetchAsync(projectRoot, url);\n}\n\nasync function metroFetchAsync(\n  projectRoot: string,\n  url: string\n): Promise<{ src: string; filename: string; map?: any }> {\n  debug('Fetching from Metro:', url);\n  // TODO: Skip the dev server and use the Metro instance directly for better results, faster.\n  const res = await fetch(url);\n\n  // TODO: Improve error handling\n  if (res.status === 500) {\n    const text = await res.text();\n    if (\n      text.startsWith('{\"originModulePath\"') ||\n      text.startsWith('{\"type\":\"TransformError\"') ||\n      text.startsWith('{\"type\":\"InternalError\"')\n    ) {\n      const errorObject = JSON.parse(text);\n\n      throw new MetroNodeError(stripAnsi(errorObject.message) ?? errorObject.message, errorObject);\n    }\n    throw new Error(`[${res.status}]: ${res.statusText}\\n${text}`);\n  }\n\n  if (!res.ok) {\n    throw new Error(`Error fetching bundle for static rendering: ${res.status} ${res.statusText}`);\n  }\n\n  const content = await res.text();\n\n  const map = await fetch(url.replace('.bundle?', '.map?')).then((r) => r.json());\n  cachedSourceMaps.set(url, { url: projectRoot, map });\n\n  return {\n    src: wrapBundle(content),\n    filename: url,\n    map,\n  };\n}\n\nexport async function getStaticRenderFunctionsForEntry<T = any>(\n  projectRoot: string,\n  devServerUrl: string,\n  options: PickPartial<ExpoMetroOptions, 'mainModuleName' | 'bytecode'>,\n  entry: string\n) {\n  const { src: scriptContents, filename } = await getStaticRenderFunctionsContentAsync(\n    projectRoot,\n    devServerUrl,\n    options,\n    entry\n  );\n\n  return {\n    filename,\n    fn: await evalMetroAndWrapFunctions<T>(projectRoot, scriptContents, filename),\n  };\n}\n\nfunction evalMetroAndWrapFunctions<T = Record<string, any>>(\n  projectRoot: string,\n  script: string,\n  filename: string\n): Promise<T> {\n  const contents = evalMetro(projectRoot, script, filename);\n  // wrap each function with a try/catch that uses Metro's error formatter\n  return Object.keys(contents).reduce((acc, key) => {\n    const fn = contents[key];\n    if (typeof fn !== 'function') {\n      return { ...acc, [key]: fn };\n    }\n\n    acc[key] = async function (...props: any[]) {\n      try {\n        return await fn.apply(this, props);\n      } catch (error: any) {\n        await logMetroError(projectRoot, { error });\n        throw new SilentError(error);\n      }\n    };\n    return acc;\n  }, {} as any);\n}\n\nexport function evalMetro(projectRoot: string, src: string, filename: string) {\n  try {\n    return evalMetroNoHandling(projectRoot, src, filename);\n  } catch (error: any) {\n    // Format any errors that were thrown in the global scope of the evaluation.\n    if (error instanceof Error) {\n      logMetroErrorAsync({ projectRoot, error }).catch((internalError) => {\n        debug('Failed to log metro error:', internalError);\n        throw error;\n      });\n    } else {\n      throw error;\n    }\n  }\n}\n\nexport function evalMetroNoHandling(projectRoot: string, src: string, filename: string) {\n  augmentLogs(projectRoot);\n\n  return profile(requireString, 'eval-metro-bundle')(src, filename);\n}\n"],"names":["createMetroEndpointAsync","requireFileContentsWithMetro","getStaticRenderFunctionsForEntry","evalMetro","evalMetroNoHandling","MetroNodeError","Error","constructor","message","rawObject","debug","require","cachedSourceMaps","Map","process","isBun","install","retrieveSourceMap","source","has","get","wrapBundle","str","replace","getRenderModuleId","projectRoot","entry","moduleId","resolveFrom","silent","moveStaticRenderFunction","memoize","requiredModuleId","tempDir","path","join","fs","promises","mkdir","recursive","writeFile","readFile","delayAsync","getStaticRenderFunctionsContentAsync","devServerUrl","props","root","getMetroServerRoot","relative","startsWith","ensureFileInRootDirectory","otherFile","sep","basename","absoluteFilePath","safeOtherFile","serverPath","urlFragment","createBundleUrlPath","mainModuleName","lazy","asyncRoutes","inlineSourceMap","engine","minify","bytecode","url","URL","toString","metroFetchAsync","res","fetch","status","text","errorObject","JSON","parse","stripAnsi","statusText","ok","content","map","then","r","json","set","src","filename","options","scriptContents","fn","evalMetroAndWrapFunctions","script","contents","Object","keys","reduce","acc","key","apply","error","logMetroError","SilentError","logMetroErrorAsync","catch","internalError","augmentLogs","profile","requireString"],"mappings":"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"}